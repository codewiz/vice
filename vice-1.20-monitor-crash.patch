diff -up vice-2.2/src/arch/unix/console.c.mon vice-2.2/src/arch/unix/console.c
--- vice-2.2/src/arch/unix/console.c.mon	2009-10-21 18:46:46.000000000 +0200
+++ vice-2.2/src/arch/unix/console.c	2010-06-22 10:12:55.164882183 +0200
@@ -114,6 +114,8 @@ char *console_in(console_t *log, const c
     char *p, *ret_sting;
 
     p = readline(prompt);
+    if (!p)
+        return (char *)-1; /* special EOF "address" */
 
     ret_sting = lib_stralloc(p);
     free(p);
diff -up vice-2.2/src/monitor/mon_util.c.mon vice-2.2/src/monitor/mon_util.c
--- vice-2.2/src/monitor/mon_util.c.mon	2009-10-21 18:46:55.000000000 +0200
+++ vice-2.2/src/monitor/mon_util.c	2010-06-22 10:20:08.306259451 +0200
@@ -210,8 +210,8 @@ char *uimon_in(const char *prompt)
 {
     char *p = NULL;
 
-    while (!p && !pchCommandLine) {
-        /* as long as we don't have any return value... */
+    while (!p && !pchCommandLine && p != (char*)-1) {
+        /* as long as we don't have any return value and not EOF */
 
 #ifdef HAVE_NETWORK
         if (monitor_is_remote()) {
@@ -233,6 +233,8 @@ char *uimon_in(const char *prompt)
         }
 #endif
     }
+    if (p == (char *)-1)
+        p = NULL;
 
     if (pchCommandLine) {
         /* we have an "artificially" generated command line */
diff -up vice-2.2/src/monitor/monitor.c.mon vice-2.2/src/monitor/monitor.c
--- vice-2.2/src/monitor/monitor.c.mon	2009-11-09 20:05:30.000000000 +0100
+++ vice-2.2/src/monitor/monitor.c	2010-06-22 10:12:55.175883371 +0200
@@ -2111,7 +2111,7 @@ static int monitor_process(char *cmd)
 {
     mon_stop_output = 0;
     if (cmd == NULL) {
-        mon_out("\n");
+        exit_mon = 1;
     } else {
         if (!cmd[0]) {
             if (!asm_mode) {
@@ -2187,12 +2187,22 @@ static void monitor_close(int check)
 
 void monitor_startup(void)
 {
+    char *in;
     char prompt[40];
+    int first_prompt = 1;
 
     monitor_open();
     while (!exit_mon) {
         make_prompt(prompt);
-        monitor_process(uimon_in(prompt));
+        in = uimon_in(prompt);
+        /* special case, if we get an EOF on the first prompt, assume
+           we do not have a valid stdin and complain about it */
+        if (first_prompt && in == NULL)
+            ui_error("Monitor exited due to EOF from console.\n"
+                "If you want to use the monitor start vice from a terminal!");
+        
+        monitor_process(in);
+        first_prompt = 0;
     }
     monitor_close(1);
 }
